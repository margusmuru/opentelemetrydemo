apiVersion: v1
kind: Service
metadata:
  name: opentelemetrydemo
  namespace: opentelemetrydemo
spec:
  selector:
    app: opentelemetrydemo
    tier: backend
  type: NodePort
  ports:
    - port: 8080
      nodePort: 30300
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: opentelemetrydemo
  namespace: opentelemetrydemo
spec:
  selector:
    matchLabels:
      app: opentelemetrydemo
      tier: backend
  replicas: 1
  template:
    metadata:
      namespace: opentelemetrydemo
      labels:
        app: opentelemetrydemo
        tier: backend
    spec:
      containers:
        - name: opentelemetrydemo
          image: localhost:32000/opentelemetrydemo:<version>
          ports:
            - name: http
              containerPort: 8080
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: "service.instance.id=$(POD_NAME),k8s.namespace.name=$(K8S_NAMESPACE),k8s.node.name=$(NODE_NAME)"
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:opentelemetry-javaagent.jar"
            - name: OTEL_LOGS_EXPORTER
              value: "otlp"
            - name: OTEL_TRACES_EXPORTER
              value: "otlp"
            - name: OTEL_METRICS_EXPORTER
              value: "otlp"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "http://192.168.40.109:4317"
            - name: OTEL_EXPORTER_OTLP_PROTOCOL
              value: "grpc"
            - name: OTEL_SERVICE_NAME
              value: "my-hello-world-app"